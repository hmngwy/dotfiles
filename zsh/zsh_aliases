gpip(){
   PIP_REQUIRE_VIRTUALENV="" pip2 "$@"
}

publish () {
  mv $1 "$(date +%Y-%m-%d) $1"
}

edit () {
  editor $(ls | grep $1)
}

# Bullet Train Theme Customization
BULLETTRAIN_TIME_SHOW=false
BULLETTRAIN_DIR_FG='black'
BULLETTRAIN_GIT_BG='250'
BULLETTRAIN_DIR_EXTENDED=0
BULLETTRAIN_VIRTUALENV_PREFIX=''

_seg_venv() {
  local virtualenv_path="$VIRTUAL_ENV"
  if [[ -n $virtualenv_path && -n $VIRTUAL_ENV_DISABLE_PROMPT ]]; then
    prompt_segment $BULLETTRAIN_VIRTUALENV_BG $BULLETTRAIN_VIRTUALENV_FG $1"$(basename $virtualenv_path)"
  elif which pyenv &> /dev/null; then
    prompt_segment $BULLETTRAIN_VIRTUALENV_BG $BULLETTRAIN_VIRTUALENV_FG $1"$(pyenv version | sed -e 's/ (set.*$//' | tr '\n' ' ' | sed 's/.$//')"
  fi
}

prompt_dirvenv() {
  if [[ $BULLETTRAIN_DIR_SHOW == false ]]; then
    return
  fi

  local dir=''
  local _context="$(context)"
  [[ $BULLETTRAIN_DIR_CONTEXT_SHOW == true && -n "$_context" ]] && dir="${dir}${_context}:"

  if [[ $BULLETTRAIN_DIR_EXTENDED == 0 ]]; then
    #short directories
    dir="${dir}%1~"
  elif [[ $BULLETTRAIN_DIR_EXTENDED == 2 ]]; then
    #long directories
    dir="${dir}%0~"
  else
    #medium directories (default case)
    dir="${dir}%4(c:...:)%3c"
  fi

  if [[ "$VIRTUAL_ENV" ]]; then
    local proj_home="~"
    if [ -f "$VIRTUAL_ENV/.project" ]; then
      proj_home=`cat $VIRTUAL_ENV/.project`
    fi
    local venv_name="$(basename $VIRTUAL_ENV)"
    local base_dir="$(basename $(pwd))"
    if [[ "$(pwd)" =~ "$proj_home" ]]; then
      _seg_venv "âŒ‚ "
      if [ "$(pwd)" != "$proj_home" ]; then
        prompt_segment $BULLETTRAIN_DIR_BG $BULLETTRAIN_DIR_FG $dir
      fi
    else
      prompt_segment $BULLETTRAIN_DIR_BG $BULLETTRAIN_DIR_FG $dir
      _seg_venv
    fi
  else
      prompt_segment $BULLETTRAIN_DIR_BG $BULLETTRAIN_DIR_FG $dir
  fi
}

prompt_hostname() {
  prompt_segment black grey "@"
}

BULLETTRAIN_PROMPT_ORDER=(
  hostname
  dirvenv
  git
)

setopt no_complete_aliases

alias tmux='tmux -2'
alias reload='source ~/.zshrc'
alias fu=cmdfu
alias show_palette='for code in {0..255}; do echo -e "\e[38;05;${code}m $code: Test"; done'
alias wan='curl ipinfo.io/ip'
alias irssi='TERM=screen-256color irssi'
alias vim=nvim
alias cat=ccat
alias h='howdoi -n 3'

# start typing + [Up-Arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

bindkey ' ' magic-space                               # [Space] - do history expansion

if [[ "${terminfo[kcbt]}" != "" ]]; then
  bindkey "${terminfo[kcbt]}" reverse-menu-complete   # [Shift-Tab] - move through the completion menu backwards
fi

bindkey '^?' backward-delete-char                     # [Backspace] - delete backward
if [[ "${terminfo[kdch1]}" != "" ]]; then
  bindkey "${terminfo[kdch1]}" delete-char            # [Delete] - delete forward
else
  bindkey "^[[3~" delete-char
  bindkey "^[3;5~" delete-char
  bindkey "\e[3~" delete-char
fi
