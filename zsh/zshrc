consrc () {
  [[ -f "$1" ]] && source "$1"
}

export DF=$HOME/.dotfiles
export DFL=$HOME/.dotfiles_local

source $DF/env
consrc $DFL/env

export ZPLUG_HOME=$DF/zsh/zplug
source $ZPLUG_HOME/init.zsh

zplug "plugins/virtualenv", from:oh-my-zsh
zplug "plugins/tmux", from:oh-my-zsh
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/git-flow-avh", from:oh-my-zsh
zplug "lib/clipboard", from:oh-my-zsh, if:"[[ $OSTYPE == *darwin* ]]"
zplug "lib/history", from:oh-my-zsh

zplug "petervanderdoes/git-flow-completion", from:github
zplug "zsh-users/zsh-completions", from:github
zplug "zsh-users/zsh-syntax-highlighting", from:github
zplug "Treri/fzf-zsh", from:github
zplug "andrewferrier/fzf-z", from:github

zplug "caiogondim/bullet-train.zsh", from:github, as:theme

zplug "rupa/z", use:z.sh
zplug "~/.dotfiles/zsh/plugins", from:local

# TMUX Plugin config
ZSH_TMUX_AUTOSTART=true
ZSH_TMUX_AUTOQUIT=false

# Init completions
fpath=($DF/zplug/repos/zsh-users/zsh-completions/src $fpath)
autoload -U compinit && compinit

# Language and Encoding
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Avoid duplicates in your bash history
export HISTCONTROL="erasedups:ignoreboth"

# Virtualenv variables
export WORKON_HOME=~/.virtualenvs
export PROJECT_HOME=~/Projects
consrc "/usr/local/bin/virtualenvwrapper.sh"

# Require virtualenv for pip, reduce garbage on global
export PIP_REQUIRE_VIRTUALENV=true

# Exporting any saved tmux env so that zsh can access it
for var in $(tmux show-environment | grep "TMUX_VENV"); do
  eval "export $var";
done;

# If pyvenv is set for this window, new panes will activate it
VENV_VAR="TMUX_VENV$(tmux display-message -p '#I')"
VENV_PATH=(${(P)VENV_VAR})
if [[ -n "$VENV_PATH" ]]; then
  workon `basename $VENV_PATH`
fi

source $DF/zsh/zsh_aliases
consrc $DFL/zsh_aliases
consrc $DFL/zshrc

consrc ~/.fzf/shell/key-bindings.zsh

zplug load
